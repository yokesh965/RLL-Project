<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="17" passed="15" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-09-19T15:26:39 IST" name="Suite" finished-at="2023-09-19T15:38:12 IST" duration-ms="692649">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7d900ecf]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-09-19T15:26:39 IST" name="Test" finished-at="2023-09-19T15:38:12 IST" duration-ms="692649">
      <class name="runner.TestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runner.TestRunner@7d900ecf]" started-at="2023-09-19T15:26:39 IST" name="setUpClass" finished-at="2023-09-19T15:26:40 IST" duration-ms="605" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5f6e6902]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7d900ecf]" started-at="2023-09-19T15:26:40 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-19T15:27:03 IST" duration-ms="23373" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Successful Login"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[login to openMRS]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7d900ecf]" started-at="2023-09-19T15:27:04 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-19T15:27:45 IST" duration-ms="41541" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search Patient Record by Name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Find Patient Record]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7d900ecf]" started-at="2023-09-19T15:27:46 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-19T15:28:12 IST" duration-ms="25897" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search Patient Record by Name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Find Patient Record]"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=116.0.5845.188)
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [cbb8a3efd5514b9fc5c830b547497f13, sendKeysToElement {id=185AD2FF53EA5E989678BC2366E6E8B4_element_72, value=[Ljava.lang.CharSequence;@5ab7ac02}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.188, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\ROGHIN~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:34027}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:34027/devtoo..., se:cdpVersion: 116.0.5845.188, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (cbb8a3efd5514b9fc5c830b547497f13)] -> id: address1]
Session ID: cbb8a3efd5514b9fc5c830b547497f13]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=116.0.5845.188)
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [cbb8a3efd5514b9fc5c830b547497f13, sendKeysToElement {id=185AD2FF53EA5E989678BC2366E6E8B4_element_72, value=[Ljava.lang.CharSequence;@5ab7ac02}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.188, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\ROGHIN~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:34027}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:34027/devtoo..., se:cdpVersion: 116.0.5845.188, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (cbb8a3efd5514b9fc5c830b547497f13)] -> id: address1]
Session ID: cbb8a3efd5514b9fc5c830b547497f13
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:224)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:111)
at jdk.internal.reflect.GeneratedMethodAccessor105.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy28.sendKeys(Unknown Source)
at pages.EnterDetails.enterDetails(EnterDetails.java:88)
at stepDefinitionScripts.RegisterPage.i_enter_the_patient_details(RegisterPage.java:50)
at âœ½.I Enter the Patient Details 2(file:///E:/Mphasis/RLL/RLLOpenMRS/RLLOpenMRS/Features/02_Register_a_Patient.feature:10)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7d900ecf]" started-at="2023-09-19T15:28:13 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-19T15:28:55 IST" duration-ms="42125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search Patient Record by Name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Find Patient Record]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7d900ecf]" started-at="2023-09-19T15:28:56 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-19T15:29:35 IST" duration-ms="39137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Navigate to OpenMRS and Perform Patient Record Search"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[OpenMRS Patient Record Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7d900ecf]" started-at="2023-09-19T15:29:36 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-19T15:30:21 IST" duration-ms="45723" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Navigate to OpenMRS and Perform Patient Record Search"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[OpenMRS Patient Record Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7d900ecf]" started-at="2023-09-19T15:30:22 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-19T15:30:55 IST" duration-ms="33522" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Navigate to OpenMRS and Perform Patient Record Search"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[OpenMRS Patient Record Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7d900ecf]" started-at="2023-09-19T15:30:56 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-19T15:31:29 IST" duration-ms="33429" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Navigate to OpenMRS and Perform Patient Record Search"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[OpenMRS Patient Record Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7d900ecf]" started-at="2023-09-19T15:31:30 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-19T15:32:09 IST" duration-ms="39093" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["A user with valid data must be able capture vitals of the patient"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Capture Vitals of the patient]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7d900ecf]" started-at="2023-09-19T15:32:10 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-19T15:32:45 IST" duration-ms="35400" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["A user with valid data must be able capture vitals of the patient"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Capture Vitals of the patient]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7d900ecf]" started-at="2023-09-19T15:32:46 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-19T15:33:23 IST" duration-ms="36546" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["A user with valid data must be able capture vitals of the patient"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Capture Vitals of the patient]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7d900ecf]" started-at="2023-09-19T15:33:23 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-19T15:33:53 IST" duration-ms="29824" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["A user with Invalid data must get error message"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Capture Vitals of the patient]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7d900ecf]" started-at="2023-09-19T15:33:55 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-19T15:34:34 IST" duration-ms="39952" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["A user with some blank data must not be able capture vitals of the patient"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Capture Vitals of the patient]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [0 minute(s) ago] but found [0 minute(s) ago]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [0 minute(s) ago] but found [0 minute(s) ago]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertNotEquals(Assert.java:1399)
at org.testng.Assert.assertNotEquals(Assert.java:1404)
at stepDefinitionScripts.BlankDataStepDefs.he_must_not_be_able_to_capture_the_vitals_of_the_patient(BlankDataStepDefs.java:15)
at âœ½.he must not be able to Capture the Vitals of the patient.(file:///E:/Mphasis/RLL/RLLOpenMRS/RLLOpenMRS/Features/04_3_Vitals_With_Blank_Data.feature:21)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7d900ecf]" started-at="2023-09-19T15:34:36 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-19T15:34:59 IST" duration-ms="22870" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add a New Service Type"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Add a new service type in manage appointment page]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7d900ecf]" started-at="2023-09-19T15:35:01 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-19T15:35:53 IST" duration-ms="51357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Manage Appointment"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Manage appointment for patients]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7d900ecf]" started-at="2023-09-19T15:35:54 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-19T15:36:52 IST" duration-ms="58042" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User must be able to create appointment block"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Create Appointment Block]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7d900ecf]" started-at="2023-09-19T15:36:53 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-19T15:37:30 IST" duration-ms="37506" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["a user is be able to edit the registration details of patient with only valid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Edit Registration Details]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.TestRunner@7d900ecf]" started-at="2023-09-19T15:37:31 IST" name="tearDownClass" finished-at="2023-09-19T15:38:12 IST" duration-ms="40986" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.TestRunner -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
